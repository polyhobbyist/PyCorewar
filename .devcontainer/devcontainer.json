{
	"name": "PyCorewar Development",
	"image": "mcr.microsoft.com/devcontainers/universal:2",
	
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/python:1": {
			"version": "3.11",
			"installTools": true
		},
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": true,
			"configureZshAsDefaultShell": true,
			"installOhMyZsh": true,
			"upgradePackages": true
		},
		"ghcr.io/devcontainers/features/git:1": {
			"version": "latest",
			"ppa": true
		}
	},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/python/current/bin/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
				"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
				"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
				"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
				"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint"
			},
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-python.flake8",
				"ms-python.black-formatter",
				"ms-vscode.cpptools",
				"ms-vscode.cmake-tools",
				"github.copilot",
				"github.copilot-chat"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "pip install --upgrade pip && pip install build wheel setuptools",

	// Use 'postStartCommand' to run commands after the container is started.
	"postStartCommand": "git config --global --add safe.directory ${containerWorkspaceFolder}",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "codespace",

	// Set container environment variables
	"containerEnv": {
		"PYTHONPATH": "${containerWorkspaceFolder}:${containerWorkspaceFolder}/src"
	},

	// Mount the workspace
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/${localWorkspaceFolderBasename},type=bind,consistency=cached",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

	// Install additional system packages needed for building C extensions
	"onCreateCommand": "sudo apt-get update && sudo apt-get install -y build-essential gcc g++ make libc6-dev python3-dev"
}
