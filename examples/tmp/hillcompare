#!/usr/bin/python
#
# Copyright (C) 2005 Jens Gutzeit <jens@jgutzeit.de>
#
# Try to compare the speed of PyCorewar and pMARS

import time, os, sys
from Corewar import *
from Corewar.Parser import *
from Corewar.Benchmarking import *

pmars_exec = 'pmars_server'

def bench_pmars(w1, w2, rounds, seed):
    """Use pMARS to run the fight."""
    
    cmdLine = '%s -b -8 -r %d -F %d %s %s' % (pmars_exec, rounds, seed, w1, w2)

    childIn, childOut = os.popen2(cmdLine)
    resultLine = childOut.readlines()
    childOut.close()
    childIn.close()

    results = resultLine[2].split(' ')
    w = int(results[1])
    l = int(results[2])
    t = rounds - w - l

    # Return elapsed time and result.
    return [w, l, t]

if __name__ == '__main__':
    parser = Simple88Parser()
    mars = MARS88()
    rounds = 100

    warriors = []
    for w in os.listdir('../../evolution/88/simplified/'):
        warriors.append(w)
    warriors.sort()

    for i in range(len(warriors)):
        w1 = warriors[i]
        w1src = '../../evolution/88/simplified/' + w1
        for j in range(i,len(warriors)):
            w2 = warriors[j]
            w2src = '../../evolution/88/simplified/' + w2
            print '(%s - %s)' % (w1, w2)
            warrior1 = parser.parseFile(w1src)
            warrior2 = parser.parseFile(w2src)
            pmars_res = bench_pmars(w1src, w2src, rounds, 13821503)
            pycw_res = mars.run((warrior1, warrior2), rounds, 13821503)
            if pmars_res == pycw_res[0]:
                score = 3 * pycw_res[0][0] + pycw_res[0][2]
                print '%s vs. %s: OK' % (warrior1.name, warrior2.name)
                print '  score: %d (W %d, L %d, T %d)' % (score, \
                                                          pycw_res[0][0],\
                                                          pycw_res[0][1], \
                                                          pycw_res[0][2])
            else:
                print '%s vs. %s: BAD!!!' % (warrior1.name, warrior2.name)
                sys.exit(1)
